<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

       <context id="mysqlTables" targetRuntime="MyBatis3">
              <!-- 抑制警告 -->
              <property name="suppressTypeWarnings" value="true"/>

              <!-- generate entity时，生成hashcode和equals方法 -->
              <!--<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>-->
              <!-- generate entity时，生成serialVersionUID -->
              <!--<plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>-->
              <!-- 这个插件只会增加字符串字段映射到一个JDBC字符的方法 -->
              <!--<plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"/>-->
              <!-- genenat entity时,生成toString -->
              <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>

              <!--mybaits代码生成器生成Example类换个名字，是通过插件实现的-->
              <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">
                     <property name="searchString" value="Example$"/>
                     <property name="replaceString" value="Criteria"/>
              </plugin>

              <!--关闭mybatis代码生成器的注解信息-->
              <commentGenerator>
                     <property name="suppressAllComments" value="true"/>
              </commentGenerator>

              <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://localhost:3306/cennacsite"
              userId="root" password=""/>
              <!--<jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver" connectionURL="jdbc:oracle:thin:@127.0.0.1:1521:gnnt"-->
                              <!--userId="trade_gnnt" password="123"/>-->

              <!-- 指定生成的类型为java类型，避免数据库中number等类型字段 -->
              <javaTypeResolver>
                     <property name="forceBigDecimals" value="false"/>
              </javaTypeResolver>

              <!-- 生成model模型，对应的包，存放位置可以指定具体的路径,如/ProjectName/src，也可以使用MAVEN来自动生成 -->
              <javaModelGenerator targetPackage="com.xsdbc.ws.entity" targetProject="MAVEN">
                     <property name="enableSubPackages" value="true"/>
              </javaModelGenerator>

              <!--对应的xml mapper文件  -->
              <sqlMapGenerator targetPackage="com.xsdbc.ws.dao" targetProject="MAVEN">
                     <property name="enableSubPackages" value="true"/>
              </sqlMapGenerator>

              <!-- 对应的dao接口 -->
              <javaClientGenerator type="XMLMAPPER" targetPackage="com.xsdbc.ws.dao" targetProject="MAVEN">
                     <property name="enableSubPackages" value="true"/>
              </javaClientGenerator>


              <!--enableInsert：是否生成插入语句。默认是true-->
              <!--enableSelectByPrimaryKey：是否通过主键生成选择语句。不管是否有这种设置,如果该表没有一个主键将不会生成。-->
              <!--enableUpdateByPrimaryKey：是否通过主键生成更新语句。如果该表没有主键，不管是否设置该属性,语句将不会生成。-->
              <!--enableDeleteByPrimaryKey：是否通过主键生成删除语句。如果该表没有主键，不管这种设置该属性,语句将不会生成。-->
              <!--enableDeleteByExample：是否通过example对象生成删除语句。这个声明使得许多不同的动态删除在运行时生成。-->
              <!--enableCountByExample：是否通过example对象生成计算行数语句。该语句将返回一个表中的行数相匹配的example。-->
              <!--enableUpdateByExample：是否通过example对象生成更新语句。该语句将更新一个表中相匹配的记录。-->

              <!--selectByPrimaryKeyQueryId：这个值将被添加到选择列表中选择通过主键的声明在本表格:“' <值>作为QUERYID”。这可以用于识别查询在DBA在运行时跟踪工具。如果你使用这样的价值,你应该指定一个唯一的id为每个不同的查询生成MBG。-->
              <!--selectByExampleQueryId：这个值将被添加到选择列表中选择通过例子的声明在本表格:“' <值>作为QUERYID”。这可以用于识别查询在DBA在运行时跟踪工具。如果你使用这样的价值,你应该指定一个唯一的id为每个不同的查询生成MBG。-->
              <!--enableSelectByExample:是否应该生成通过example的选择语句。这个声明使得许多不同的动态查询是在运行时生成。-->

              <!--Article  文章-->
              <table tableName="blog_article" domainObjectName="Article" enableCountByExample="false" enableUpdateByExample="false"
                     enableDeleteByExample="false" enableSelectByExample="false"
                     selectByExampleQueryId="false"/>

              <!--ArticleData 文章数据-->
              <table tableName="blog_article_data" domainObjectName="ArticleData" enableCountByExample="false" enableUpdateByExample="false"
                     enableDeleteByExample="false" enableSelectByExample="false"
                     selectByExampleQueryId="false"/>

              <!--Category 分类-->
              <table tableName="blog_category" domainObjectName="Category" enableCountByExample="false" enableUpdateByExample="false"
                     enableDeleteByExample="false" enableSelectByExample="false"
                     selectByExampleQueryId="false"/>

       </context>
</generatorConfiguration>
