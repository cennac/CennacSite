<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

       <!-- 加载配置属性文件 -->
       <context:property-placeholder ignore-unresolvable="true" location="classpath:config.properties" />

       <!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。  -->
       <context:component-scan base-package="com.cennac.ccsite"><!-- base-package 如果多个，用“,”分隔 -->
              <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
       </context:component-scan>

       <!--配置Druid数据库连接池-->
       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
              <!-- 基本属性 url、user、password -->
              <property name="url" value="${jdbc_url}" />
              <property name="username" value="${jdbc_username}" />
              <property name="password" value="${jdbc_password}" />

              <!-- 配置初始化大小、最小、最大 -->
              <property name="initialSize" value="1" />
              <property name="minIdle" value="1" />
              <property name="maxActive" value="20" />

              <!-- 配置获取连接等待超时的时间 -->
              <property name="maxWait" value="60000" />

              <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
              <property name="timeBetweenEvictionRunsMillis" value="60000" />

              <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
              <property name="minEvictableIdleTimeMillis" value="300000" />

              <property name="validationQuery" value="SELECT 'x'" />
              <property name="testWhileIdle" value="true" />
              <property name="testOnBorrow" value="false" />
              <property name="testOnReturn" value="false" />

              <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
              <property name="poolPreparedStatements" value="true" />
              <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

              <!-- 配置监控统计拦截的filters -->
              <property name="filters" value="stat" />
       </bean>

       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <!--配置Datasource-->
              <property name="dataSource" ref="dataSource" />
              <!--&lt;!&ndash;设置Mybatis中Entity别名的包路径&ndash;&gt;-->
              <!--<property name="typeAliasesPackage" value="com.cennac.ccsite"/>-->
              <!--&lt;!&ndash;通过Mybatis中Entity的父类，扫描设置Entity的别名&ndash;&gt;-->
              <!--<property name="typeAliasesSuperType" value="com.cennac.ccsite.common.BaseEntity"/>-->
              <!--&lt;!&ndash;Mybatis Mapper存放路径&ndash;&gt;-->
              <!--<property name="mapperLocations" value="classpath*:/com/cennac/ccsite/**/mappings/*Dao.xml"/>-->
              <!--&lt;!&ndash;Mybatis 配置文件路径&ndash;&gt;-->
              <!--<property name="configLocation" value="classpath:/mybatis-config.xml"/>-->
       </bean>

       <!--定义事务-->
       <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="dataSource"/>
       </bean>

       <!--扫描@Transactional注解的类定义事务-->
       <tx:annotation-driven transaction-manager="dataSourceTransactionManager" proxy-target-class="true"/>




</beans>